[{"C:\\Users\\andre\\Desktop\\contentfulgroupwork\\src\\index.js":"1","C:\\Users\\andre\\Desktop\\contentfulgroupwork\\src\\App.js":"2","C:\\Users\\andre\\Desktop\\contentfulgroupwork\\src\\reportWebVitals.js":"3","C:\\Users\\andre\\Desktop\\contentfulgroupwork\\src\\views\\AllPosts.js":"4","C:\\Users\\andre\\Desktop\\contentfulgroupwork\\src\\views\\TopFivePosts.js":"5","C:\\Users\\andre\\Desktop\\contentfulgroupwork\\src\\Card\\index.js":"6","C:\\Users\\andre\\Desktop\\contentfulgroupwork\\src\\Card\\User\\index.js":"7","C:\\Users\\andre\\Desktop\\contentfulgroupwork\\src\\Card\\Info\\index.js":"8"},{"size":601,"mtime":1610636914057,"results":"9","hashOfConfig":"10"},{"size":1670,"mtime":1611335010163,"results":"11","hashOfConfig":"10"},{"size":375,"mtime":1610636914065,"results":"12","hashOfConfig":"10"},{"size":2934,"mtime":1611519777658,"results":"13","hashOfConfig":"10"},{"size":1192,"mtime":1611243343501,"results":"14","hashOfConfig":"10"},{"size":3300,"mtime":1611507868427,"results":"15","hashOfConfig":"10"},{"size":1457,"mtime":1611507868425,"results":"16","hashOfConfig":"10"},{"size":811,"mtime":1611507868424,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"cwvlg1",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"20"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"C:\\Users\\andre\\Desktop\\contentfulgroupwork\\src\\index.js",[],["37","38"],"C:\\Users\\andre\\Desktop\\contentfulgroupwork\\src\\App.js",[],"C:\\Users\\andre\\Desktop\\contentfulgroupwork\\src\\reportWebVitals.js",[],"C:\\Users\\andre\\Desktop\\contentfulgroupwork\\src\\views\\AllPosts.js",["39"],"C:\\Users\\andre\\Desktop\\contentfulgroupwork\\src\\views\\TopFivePosts.js",[],"C:\\Users\\andre\\Desktop\\contentfulgroupwork\\src\\Card\\index.js",["40","41","42","43"],"import React, { useEffect, useState } from \"react\";\r\nimport \"./styles.css\";\r\nimport \"./bigstyles.css\";\r\nimport Info from \"./Info\";\r\nimport User from \"./User\";\r\nimport StarRatings from \"react-star-ratings\";\r\nimport axios from \"axios\";\r\n\r\nexport default function Card({\r\n  title,\r\n  description,\r\n  userid,\r\n  rating,\r\n  imageurl,\r\n  users,\r\n  setUsers,\r\n  username,\r\n  email,\r\n  profilePicture,\r\n}) {\r\n  const [enlarge, setEnlarge] = useState();\r\n  const [info, setInfo] = useState();\r\n  const [user, setUser] = useState();\r\n  const [userInfo, setUserInfo] = useState([]);\r\n  const [btnActive, setBtnActive] = useState(\"bignavBttn\");\r\n  useEffect(() => {\r\n    axios\r\n      .get(\r\n        `https://cdn.contentful.com/spaces/8fv8p8zq5nhk/environments/master/entries?access_token=2Kxs5ywkZC4G2_BlVcVViNwuADQfYgS90gfRRS85QUY&content_type=user&sys.id[match]=${userid}`\r\n      )\r\n      .then((response) => {\r\n        setUserInfo(response.data.items);\r\n        console.log(userInfo);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }, []);\r\n  const picEnlargement = () => {\r\n    enlarge ? setEnlarge(false) : setEnlarge(true);\r\n    setInfo(false);\r\n    setUser(false);\r\n  };\r\n  const showInfo = () => {\r\n    if (!info) {\r\n      setInfo(true);\r\n      setBtnActive(\"bignavBttnActive\");\r\n      setUser(false);\r\n    } else {\r\n      setInfo(false);\r\n      setBtnActive(\"bignavBttn\");\r\n    }\r\n  };\r\n  const showUser = () => {\r\n    if (!user) {\r\n      setUser(true);\r\n      setInfo(false);\r\n    } else {\r\n      setUser(false);\r\n    }\r\n  };\r\n\r\n  return !enlarge ? (\r\n    <div className=\"card\">\r\n      <div className=\"image\">\r\n        <img src={imageurl} />\r\n      </div>\r\n\r\n      <div className=\"details\">\r\n        <div className=\"center\">\r\n          <h1>{title}</h1>\r\n          <p>{description}</p>\r\n\r\n          <StarRatings\r\n            rating={rating}\r\n            starRatedColor=\"gold\"\r\n            numberOfStars={5}\r\n            starDimension=\"20px\"\r\n            starSpacing=\"0px\"\r\n          />\r\n        </div>\r\n        <div className=\"plus\">\r\n          <i\r\n            className=\"fa fa-expand fa-2x\"\r\n            aria-hidden=\"true\"\r\n            onClick={() => {\r\n              picEnlargement();\r\n            }}\r\n          ></i>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  ) : (\r\n    //bigger Card\r\n    <div className=\"bigCard\">\r\n      <div className=\"bigimage\">\r\n        <img src={imageurl} />\r\n      </div>\r\n      <div className=\"bignav\">\r\n        <nav className=\"bignavBar\">\r\n          <button\r\n            className=\"bignavBttn\"\r\n            activeClassName=\"bignavBttnActive\"\r\n            onClick={() => showInfo()}\r\n          >\r\n            <i className=\"fa fa-info\"></i>\r\n          </button>\r\n          <button\r\n            className=\"bignavBttn\"\r\n            activeClassName=\"bignavBttnActive\"\r\n            onClick={() => showUser()}\r\n          >\r\n            <i className=\"fa fa-user\"></i>\r\n          </button>\r\n\r\n          <button className=\"bignavBttn close\" onClick={() => picEnlargement()}>\r\n            <i className=\"fa fa-close\"></i>\r\n          </button>\r\n        </nav>\r\n      </div>\r\n      {info ? (\r\n        <Info title={title} description={description} rating={rating} />\r\n      ) : null}\r\n      {user ? <User userid={userid} /> : null}\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\andre\\Desktop\\contentfulgroupwork\\src\\Card\\User\\index.js",["44","45"],"import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./styles.css\";\r\n\r\nexport default function User({ userid }) {\r\n  const [userInfo, setUserInfo] = useState([]);\r\n  useEffect(() => {\r\n    axios\r\n      .get(\r\n        `https://cdn.contentful.com/spaces/8fv8p8zq5nhk/environments/master/entries?access_token=2Kxs5ywkZC4G2_BlVcVViNwuADQfYgS90gfRRS85QUY&content_type=user&sys.id[match]=${userid}`\r\n      )\r\n      .then((response) => {\r\n        setUserInfo(response.data.items);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }, []);\r\n  return (\r\n    <div className=\"info\">\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>User Info</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr>\r\n            <td className=\"profilePic\">\r\n              {userInfo.map((iteration, index) => {\r\n                return (\r\n                  <img key={index} src={iteration.fields.profilePicture} />\r\n                );\r\n              })}\r\n            </td>\r\n          </tr>\r\n          <tr>\r\n            {userInfo.map((iteration, index) => {\r\n              return <td key={index}>{iteration.fields.username}</td>;\r\n            })}\r\n          </tr>\r\n          <tr>\r\n            {userInfo.map((iteration, index) => {\r\n              return <td key={index}>{iteration.fields.email}</td>;\r\n            })}\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\andre\\Desktop\\contentfulgroupwork\\src\\Card\\Info\\index.js",[],{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","severity":1,"message":"51","line":11,"column":13,"nodeType":"52","endLine":24,"endColumn":4},{"ruleId":"53","severity":1,"message":"54","line":25,"column":10,"nodeType":"55","messageId":"56","endLine":25,"endColumn":19},{"ruleId":"50","severity":1,"message":"57","line":38,"column":6,"nodeType":"58","endLine":38,"endColumn":8,"suggestions":"59"},{"ruleId":"60","severity":1,"message":"61","line":66,"column":9,"nodeType":"62","endLine":66,"endColumn":31},{"ruleId":"60","severity":1,"message":"61","line":97,"column":9,"nodeType":"62","endLine":97,"endColumn":31},{"ruleId":"50","severity":1,"message":"63","line":18,"column":6,"nodeType":"58","endLine":18,"endColumn":8,"suggestions":"64"},{"ruleId":"60","severity":1,"message":"61","line":32,"column":19,"nodeType":"62","endLine":32,"endColumn":76},"no-native-reassign",["65"],"no-negated-in-lhs",["66"],"react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","no-unused-vars","'btnActive' is assigned a value but never used.","Identifier","unusedVar","React Hook useEffect has missing dependencies: 'userInfo' and 'userid'. Either include them or remove the dependency array.","ArrayExpression",["67"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has a missing dependency: 'userid'. Either include it or remove the dependency array.",["68"],"no-global-assign","no-unsafe-negation",{"desc":"69","fix":"70"},{"desc":"71","fix":"72"},"Update the dependencies array to be: [userInfo, userid]",{"range":"73","text":"74"},"Update the dependencies array to be: [userid]",{"range":"75","text":"76"},[1059,1061],"[userInfo, userid]",[593,595],"[userid]"]